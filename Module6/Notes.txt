OPEN ACC Directives

https://www.openacc.org/sites/default/files/inline-files/OpenACC_2_0_specification.pdf

#pragma acc > directive (optimize) part of a program
The directive improves the performance by offloading computation to the GPU
    Bitcoin, AI, image processing

#pragma acc parallel - Runs code in parallel -> Loop execution
#pragma acc kernels - Detect and offloads computation automatically - Matrix Multiplication 
#pragma acc loops - Marks a loop for parallel execution - Nested loops processing
#pragma acc parallel loop - performs reduction operation - sum calculation
#pragma acc data copy (var) - Manage data transfer between the CPU and GPU - Sorting
#pragma acc atomic - Ensures correct memory updates in parallel execution



In OpenACC, the primary directives include: "acc kernels" to mark a loop for parallel execution on the accelerator, "acc data" to manage data transfer between host and device memory, "acc loop" to specify a loop for offloading, "acc parallel" for parallel execution, "acc wait" to synchronize threads, "acc update" to copy data back from the device, "acc declare" to declare variables on the device, and "acc cache" to control data caching on the accelerator; all used within a "#pragma" statement to indicate compiler instructions. 





